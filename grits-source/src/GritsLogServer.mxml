<?xml version="1.0" encoding="utf-8"?>
<!--
////////////////////////////////////////////////////////////////////////////////
//
//  MATTBOLT.BLOGSPOT.COM
//  Copyright(C) 2010 Matt Bolt
//
//  Licensed under the Apache License, Version 2.0 (the "License");
//  you may not use this file except in compliance with the License.
//  You may obtain a copy of the License at:
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
//  Unless required by applicable law or agreed to in writing, software
//  distributed under the License is distributed on an "AS IS" BASIS,
//  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//  See the License for the specific language governing permissions and
//  limitations under the License.
//
////////////////////////////////////////////////////////////////////////////////
-->
<s:WindowedApplication
    xmlns:fx="http://ns.adobe.com/mxml/2009"
    xmlns:s="library://ns.adobe.com/flex/spark"
    xmlns:mx="library://ns.adobe.com/flex/mx"
    xmlns:grits="com.mattbolt.grits.view.*"
    xmlns:ifone="com.mattbolt.ifone.*"
	creationPolicy="all"
    width="800" height="300"
	frameRate="60"
	showStatusBar="false"
    backgroundAlpha="0"
    creationComplete="init();"
    close="onClose();">
    
    <fx:Style source="GritsLogServerStyles.css"/>
    
    <s:layout>
        <s:VerticalLayout 
            horizontalAlign="left" verticalAlign="top" 
            paddingBottom="0" paddingTop="0" 
            paddingRight="0" paddingLeft="0"/>
    </s:layout>
    <fx:Script>
        <![CDATA[

        ]]>
    </fx:Script>

    <fx:Declarations>
        
    </fx:Declarations>

    <fx:Script>
        <![CDATA[
            import com.mattbolt.grits.Grits;
            import com.mattbolt.grits.GritsBuilder;
            import com.mattbolt.grits.config.GritsConfiguration;
            import com.mattbolt.grits.messaging.defaultMessageParser;
            import com.mattbolt.grits.net.defaultGritsServer;
            import com.mattbolt.grits.view.GritsConfigurationPanel;
            
            import mx.containers.TabNavigator;
            
            //--------------------------------------------------------------------------
            //
            //  Variables
            //
            //--------------------------------------------------------------------------
            
            /**
             * @private
             * server socket connection
             */
            private var _grits:Grits;
            
            //--------------------------------------------------------------------------
            //
            //  Methods: Initializer
            //
            //--------------------------------------------------------------------------
            
            /**
             * @private
             * handle initialize
             */
            private function init():void {
                _grits = new GritsBuilder()
                    .withServer(defaultGritsServer())
                    .boundTo("localhost", 4444)
                    .parsingMessagesWith(defaultMessageParser())
                    .configuredWith(new GritsConfiguration())
                    .usingContainer(new TabNavigator())
                    .build();

                _grits.start();
                
                GritsConfigurationPanel.show();
            }
            
            /**
             * @private
             * handler for this window closing
             */
            private function onClose():void {
                nativeApplication.exit(0);
            }
            
            
            //--------------------------------------------------------------------------
            //
            //  Properties
            //
            //--------------------------------------------------------------------------
            
            [Bindable("nativeWindowChanged")]
            
            /**
             * @inheritDoc
             */
            public override function get nativeWindow():NativeWindow {
                return super.nativeWindow;
            }

        ]]>
    </fx:Script>

    <s:BorderContainer width="100%" height="100%" backgroundImage="@Embed(source='/../assets/images/bg.png')" backgroundImageFillMode="repeat" borderWeight="0">
        <ifone:IFoneTitleBar 
            left="0" top="0"
            width="100%"
            nativeWindow="{nativeWindow}" 
            rightButtonText="Exit"
            windowTitle="Grits"/>
        
        <ifone:IFoneButton width="150" label="Matt Rules" x="250" y="250"/>
        <!-- <mx:TabNavigator id="tab" left="1" right="1" height="100%"/>-->
    </s:BorderContainer>
    
</s:WindowedApplication>