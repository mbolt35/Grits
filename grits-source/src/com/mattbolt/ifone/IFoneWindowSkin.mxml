<?xml version="1.0" encoding="utf-8"?>
<!--
////////////////////////////////////////////////////////////////////////////////
//
//  MATTBOLT.BLOGSPOT.COM
//  Copyright(C) 2010 Matt Bolt
//
//  Licensed under the Apache License, Version 2.0 (the "License");
//  you may not use this file except in compliance with the License.
//  You may obtain a copy of the License at:
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
//  Unless required by applicable law or agreed to in writing, software
//  distributed under the License is distributed on an "AS IS" BASIS,
//  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//  See the License for the specific language governing permissions and
//  limitations under the License.
//
////////////////////////////////////////////////////////////////////////////////
-->

<!---
* This class is used to skin an <code>IFoneWindow</code> instance.
* 
* @author Matt Bolt [mbolt35&#64;gmail.com]
-->
<s:SparkSkin 
    xmlns:fx="http://ns.adobe.com/mxml/2009" 
    xmlns:s="library://ns.adobe.com/flex/spark" 
    xmlns:fb="http://ns.adobe.com/flashbuilder/2009"
    xmlns:ifone="com.mattbolt.ifone.*"
    alpha.disabledGroup="0.5" >
    
    <fx:Metadata>
        /**
         * This meta-data defines the component to use the skin with
         */ 
        [HostComponent("com.mattbolt.ifone.IFoneWindow")]
    </fx:Metadata>

    <fx:Script fb:purpose="styling">
        <![CDATA[
            
            //--------------------------------------------------------------------------
            //
            //  Static Variables
            //
            //--------------------------------------------------------------------------
            
            /**
             * @private
             * exclusions for styling
             */
            private static const exclusions:Array = [
                "backBackgroundRect",
                "backgroundRect", 
                "contentGroup", 
                "statusText"
            ];
            
            
            //--------------------------------------------------------------------------
            //
            //  Override Methods: SparkSkin
            //
            //--------------------------------------------------------------------------
            
            /**
             * @private
             */
            protected override function initializationComplete():void {
                useChromeColor = true;
                
                super.initializationComplete();
            } 
            
            /**
             * @private
             */
            protected override function updateDisplayList(unscaledWidth:Number, unscaledHeight:Number):void {
                backBackgroundFill.color = getStyle("backgroundColor");
                backBackgroundFill.alpha = backgroundFill.alpha = getStyle("backgroundAlpha");
                
                super.updateDisplayList(unscaledWidth, unscaledHeight);
            }
            
            
            //--------------------------------------------------------------------------
            //
            //  Properties
            //
            //--------------------------------------------------------------------------
            
            /**
             * @private
             */
            public override function get colorizeExclusions():Array {
                return exclusions;
            }
            
        
        ]]>
    </fx:Script>
    
    <!-- Window States -->
    <s:states>
        <s:State name="normal" />
        <s:State name="disabled" stateGroups="disabledGroup" />
        <s:State name="normalAndInactive" stateGroups="inactiveGroup" />
        <s:State name="disabledAndInactive" stateGroups="disabledGroup, inactiveGroup" />
    </s:states>

    <!---
     * Defines the solid color background content within the skin
     -->
    <s:Rect id="backBackgroundRect" left="0" right="0" top="0" bottom="0">
        <s:fill>
            <s:SolidColor id="backBackgroundFill"/>
        </s:fill>
    </s:Rect>
    
    <!--- 
     * Defines the background content within the skin
     -->
    <s:Rect id="backgroundRect" left="0" right="0" top="0" bottom="0">
        <s:fill>
            <s:BitmapFill id="backgroundFill" source="{hostComponent.backgroundImage}" fillMode="repeat"/>
        </s:fill>
        <s:stroke>
            <s:SolidColorStroke color="#000000" caps="square" weight="1"/>
        </s:stroke>
    </s:Rect>

    <!--
     * @private
     * contains the content and status bar 
     -->
    <s:Group left="0" right="0" top="0" bottom="0" minHeight="24" minWidth="0">
        <s:layout>
            <s:VerticalLayout gap="0"/>
        </s:layout>
    
        <ifone:IFoneTitleBar id="iTitleBar"
            left="0" top="0"
            width="100%" 
            windowTitle="{hostComponent.title}"
            nativeWindow="{hostComponent.nativeWindow}"
            closeButtonText="{hostComponent.closeButtonLabel}"
            backButtonText="{hostComponent.backButtonLabel}"/>
        
        <!--- @copy spark.components.SkinnableContainer#contentGroup -->
        <s:Group id="contentGroup" width="100%" height="100%" minHeight="0" minWidth="0"/>
        
        <!-- status bar -->
        <!--- @copy spark.components.WindowedApplication#statusBar -->
        <s:Group id="statusBar" width="100%" minHeight="24" >
        
            <!-- status bar fill -->
            <s:Rect left="0" right="0" top="0" bottom="0">
               <s:fill>
                    <s:LinearGradient rotation="90">
                        <s:GradientEntry color="0xE2E2E2" />
                        <s:GradientEntry color="0xD9D9D9" />
                    </s:LinearGradient>
               </s:fill>
            </s:Rect>
            
            <!-- status bar highlight -->
            <s:Rect left="1" right="1" top="1" bottom="0" >
               <s:stroke>
                    <s:LinearGradientStroke rotation="90" weight="1">
                        <s:GradientEntry color="0xEAEAEA" />
                        <s:GradientEntry color="0xBEBEBE" />
                    </s:LinearGradientStroke>
               </s:stroke>
            </s:Rect>
        
            <!-- status text -->
            <!--- @copy spark.components.WindowedApplication#statusText -->
            <s:Label id="statusText" 
                top="2" bottom="2" 
                left="10" right="10" 
                verticalAlign="middle" 
                fontSize="10" color="0x585858" 
                width="100%" maxDisplayedLines="1" />
        </s:Group> 
    </s:Group>

</s:SparkSkin>
