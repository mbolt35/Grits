<?xml version="1.0" encoding="utf-8"?>
<!--
////////////////////////////////////////////////////////////////////////////////
//
//  MATTBOLT.BLOGSPOT.COM
//  Copyright(C) 2010 Matt Bolt
//
//  Licensed under the Apache License, Version 2.0 (the "License");
//  you may not use this file except in compliance with the License.
//  You may obtain a copy of the License at:
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
//  Unless required by applicable law or agreed to in writing, software
//  distributed under the License is distributed on an "AS IS" BASIS,
//  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//  See the License for the specific language governing permissions and
//  limitations under the License.
//
////////////////////////////////////////////////////////////////////////////////
-->

<!---
* This class represents an iPhone styled settings panel node skin.
* 
* @author Matt Bolt [mbolt35&#64;gmail.com]
-->
<s:Skin 
    xmlns:fx="http://ns.adobe.com/mxml/2009" 
    xmlns:s="library://ns.adobe.com/flex/spark" 
    xmlns:mx="library://ns.adobe.com/flex/mx"
    xmlns:fb="http://ns.adobe.com/flashbuilder/2009"
    xmlns:ifone="com.mattbolt.ifone.*"
    creationComplete="onCreationComplete();"
    alpha.disabled="0.5">
    
    <fx:Metadata>
        /**
         * This meta-data defines the component to use the skin with
         */ 
        [HostComponent("com.mattbolt.ifone.IFoneSettingsNode")]
    </fx:Metadata>
    
    <fx:Script>
        <![CDATA[
            
            [Bindable]
            
            /**
             * @private
             * a reference to the owner's properties
             */
            private var _parentNode:IFoneSettingsNode;
        
            /**
             * @private
             * handle creation complete
             */
            private function onCreationComplete():void {
                currentState = "normal";
                
                _parentNode = IFoneSettingsNode(this.owner);
                
                if (_parentNode.iconImage && _parentNode.label) {
                    currentState = "iconAndLabel";
                } else if (_parentNode.iconImage && !_parentNode.label) {
                    currentState = "iconOnly";
                } else if (!_parentNode.iconImage && _parentNode.label) {
                    currentState = "labelOnly";
                } 
            }
            
            /**
             * @inheritDoc
             */
            protected override function updateDisplayList(unscaledWidth:Number, unscaledHeight:Number):void {
                super.updateDisplayList(unscaledWidth, unscaledHeight);
            }
            
        ]]>
    </fx:Script>
    
    <!-- States and Transitions -->
    <s:states>
        <s:State name="normal"/>
        <s:State name="iconOnly"/>
        <s:State name="labelOnly"/>
        <s:State name="iconAndLabel"/>
        <s:State name="disabled"/>
    </s:states>
    
    <!--- 
     * @private 
     -->
    <s:Rect id="backRect" x="0" y="0" width="100%" height="100%" 
        bottomLeftRadiusX="{_parentNode.isBottom ? _parentNode.radius : 0}" bottomLeftRadiusY="{_parentNode.isBottom ? _parentNode.radius : 0}" 
        bottomRightRadiusX="{_parentNode.isBottom ? _parentNode.radius : 0}" bottomRightRadiusY="{_parentNode.isBottom ? _parentNode.radius : 0}"
        topLeftRadiusX="{_parentNode.isTop ? _parentNode.radius : 0}" topLeftRadiusY="{_parentNode.isTop ? _parentNode.radius : 0}"
        topRightRadiusX="{_parentNode.isTop ? _parentNode.radius : 0}" topRightRadiusY="{_parentNode.isTop ? _parentNode.radius : 0}">
        
        <s:fill>
            <s:SolidColor color="#FFFFFF"/>
        </s:fill>
        
        <s:stroke>
            <s:SolidColorStroke color="#ABABAB" pixelHinting="true" caps="round" weight="2" alpha="0.5"/>
        </s:stroke>
    </s:Rect>
    
    <!--- 
     * @private 
     -->
    <s:HGroup id="contentGroup" x="0" y="0" width="100%" height="100%" horizontalAlign="left" verticalAlign="middle" paddingLeft="10" paddingRight="10"> 
        <ifone:IFoneIcon includeIn="iconOnly,iconAndLabel" icon="{_parentNode.iconImage}"/>
        <s:Label includeIn="labelOnly,iconAndLabel" text="{_parentNode.label}" styleName="{_parentNode.labelStyleName}"/>
        <mx:Spacer includeIn="iconOnly,labelOnly,iconAndLabel" width="100%"/>
    </s:HGroup>

</s:Skin>
